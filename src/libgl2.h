#ifndef LIBGL2_H
#define LIBGL2_H

#include <GLES2/gl2.h>

#define GL2_LIB_NAME "libGLESv2.so.2"

class LibGl2 {

	public:

	private:
		void* _func_handle;

		// OpenGL functions typedefs
		typedef void (*glActiveTexture_handle)(GLenum texture);
		typedef void (*glAttachShader_handle)(GLuint program, GLuint shader);
		typedef void (*glBindAttribLocation_handle)(GLuint program, GLuint index, const GLchar* name);
		typedef void (*glBindBuffer_handle)(GLenum target, GLuint buffer);
		typedef void (*glBindFramebuffer_handle)(GLenum target, GLuint framebuffer);
		typedef void (*glBindRenderbuffer_handle)(GLenum target, GLuint renderbuffer);
		typedef void (*glBindTexture_handle)(GLenum target, GLuint texture);
		typedef void (*glBlendColor_handle)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
		typedef void (*glBlendEquation_handle)(GLenum mode);
		typedef void (*glBlendEquationSeparate_handle)(GLenum modeRGB, GLenum modeAlpha);
		typedef void (*glBlendFunc_handle)(GLenum sfactor, GLenum dfactor);
		typedef void (*glBlendFuncSeparate_handle)(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
		typedef void (*glBufferData_handle)(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
		typedef void (*glBufferSubData_handle)(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
		typedef GLenum (*glCheckFramebufferStatus_handle)(GLenum target);
		typedef void (*glClear_handle)(GLbitfield mask);
		typedef void (*glClearColor_handle)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
		typedef void (*glClearDepthf_handle)(GLclampf depth);
		typedef void (*glClearStencil_handle)(GLint s);
		typedef void (*glColorMask_handle)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
		typedef void (*glCompileShader_handle)(GLuint shader);
		typedef void (*glCompressedTexImage2D_handle)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);
		typedef void (*glCompressedTexSubImage2D_handle)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);
		typedef void (*glCopyTexImage2D_handle)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
		typedef void (*glCopyTexSubImage2D_handle)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
		typedef GLuint (*glCreateProgram_handle)(void);
		typedef GLuint (*glCreateShader_handle)(GLenum type);
		typedef void (*glCullFace_handle)(GLenum mode);
		typedef void (*glDeleteBuffers_handle)(GLsizei n, const GLuint* buffers);
		typedef void (*glDeleteFramebuffers_handle)(GLsizei n, const GLuint* framebuffers);
		typedef void (*glDeleteProgram_handle)(GLuint program);
		typedef void (*glDeleteRenderbuffers_handle)(GLsizei n, const GLuint* renderbuffers);
		typedef void (*glDeleteShader_handle)(GLuint shader);
		typedef void (*glDeleteTextures_handle)(GLsizei n, const GLuint* textures);
		typedef void (*glDepthFunc_handle)(GLenum func);
		typedef void (*glDepthMask_handle)(GLboolean flag);
		typedef void (*glDepthRangef_handle)(GLclampf zNear, GLclampf zFar);
		typedef void (*glDetachShader_handle)(GLuint program, GLuint shader);
		typedef void (*glDisable_handle)(GLenum cap);
		typedef void (*glDisableVertexAttribArray_handle)(GLuint index);
		typedef void (*glDrawArrays_handle)(GLenum mode, GLint first, GLsizei count);
		typedef void (*glDrawElements_handle)(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
		typedef void (*glEnable_handle)(GLenum cap);
		typedef void (*glEnableVertexAttribArray_handle)(GLuint index);
		typedef void (*glFinish_handle)(void);
		typedef void (*glFlush_handle)(void);
		typedef void (*glFramebufferRenderbuffer_handle)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
		typedef void (*glFramebufferTexture2D_handle)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
		typedef void (*glFrontFace_handle)(GLenum mode);
		typedef void (*glGenBuffers_handle)(GLsizei n, GLuint* buffers);
		typedef void (*glGenerateMipmap_handle)(GLenum target);
		typedef void (*glGenFramebuffers_handle)(GLsizei n, GLuint* framebuffers);
		typedef void (*glGenRenderbuffers_handle)(GLsizei n, GLuint* renderbuffers);
		typedef void (*glGenTextures_handle)(GLsizei n, GLuint* textures);
		typedef void (*glGetActiveAttrib_handle)(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
		typedef void (*glGetActiveUniform_handle)(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
		typedef void (*glGetAttachedShaders_handle)(GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders);
		typedef int (*glGetAttribLocation_handle)(GLuint program, const GLchar* name);
		typedef void (*glGetBooleanv_handle)(GLenum pname, GLboolean* params);
		typedef void (*glGetBufferParameteriv_handle)(GLenum target, GLenum pname, GLint* params);
		typedef GLenum (*glGetError_handle)(void);
		typedef void (*glGetFloatv_handle)(GLenum pname, GLfloat* params);
		typedef void (*glGetFramebufferAttachmentParameteriv_handle)(GLenum target, GLenum attachment, GLenum pname, GLint* params);
		typedef void (*glGetIntegerv_handle)(GLenum pname, GLint* params);
		typedef void (*glGetProgramiv_handle)(GLuint program, GLenum pname, GLint* params);
		typedef void (*glGetProgramInfoLog_handle)(GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog);
		typedef void (*glGetRenderbufferParameteriv_handle)(GLenum target, GLenum pname, GLint* params);
		typedef void (*glGetShaderiv_handle)(GLuint shader, GLenum pname, GLint* params);
		typedef void (*glGetShaderInfoLog_handle)(GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog);
		typedef void (*glGetShaderPrecisionFormat_handle)(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
		typedef void (*glGetShaderSource_handle)(GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source);
		typedef const GLubyte* (*glGetString_handle)(GLenum name);
		typedef void (*glGetTexParameterfv_handle)(GLenum target, GLenum pname, GLfloat* params);
		typedef void (*glGetTexParameteriv_handle)(GLenum target, GLenum pname, GLint* params);
		typedef void (*glGetUniformfv_handle)(GLuint program, GLint location, GLfloat* params);
		typedef void (*glGetUniformiv_handle)(GLuint program, GLint location, GLint* params);
		typedef int (*glGetUniformLocation_handle)(GLuint program, const GLchar* name);
		typedef void (*glGetVertexAttribfv_handle)(GLuint index, GLenum pname, GLfloat* params);
		typedef void (*glGetVertexAttribiv_handle)(GLuint index, GLenum pname, GLint* params);
		typedef void (*glGetVertexAttribPointerv_handle)(GLuint index, GLenum pname, GLvoid** pointer);
		typedef void (*glHint_handle)(GLenum target, GLenum mode);
		typedef GLboolean (*glIsBuffer_handle)(GLuint buffer);
		typedef GLboolean (*glIsEnabled_handle)(GLenum cap);
		typedef GLboolean (*glIsFramebuffer_handle)(GLuint framebuffer);
		typedef GLboolean (*glIsProgram_handle)(GLuint program);
		typedef GLboolean (*glIsRenderbuffer_handle)(GLuint renderbuffer);
		typedef GLboolean (*glIsShader_handle)(GLuint shader);
		typedef GLboolean (*glIsTexture_handle)(GLuint texture);
		typedef void (*glLineWidth_handle)(GLfloat width);
		typedef void (*glLinkProgram_handle)(GLuint program);
		typedef void (*glPixelStorei_handle)(GLenum pname, GLint param);
		typedef void (*glPolygonOffset_handle)(GLfloat factor, GLfloat units);
		typedef void (*glReadPixels_handle)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
		typedef void (*glReleaseShaderCompiler_handle)(void);
		typedef void (*glRenderbufferStorage_handle)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
		typedef void (*glSampleCoverage_handle)(GLclampf value, GLboolean invert);
		typedef void (*glScissor_handle)(GLint x, GLint y, GLsizei width, GLsizei height);
		typedef void (*glShaderBinary_handle)(GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length);
		typedef void (*glShaderSource_handle)(GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length);
		typedef void (*glStencilFunc_handle)(GLenum func, GLint ref, GLuint mask);
		typedef void (*glStencilFuncSeparate_handle)(GLenum face, GLenum func, GLint ref, GLuint mask);
		typedef void (*glStencilMask_handle)(GLuint mask);
		typedef void (*glStencilMaskSeparate_handle)(GLenum face, GLuint mask);
		typedef void (*glStencilOp_handle)(GLenum fail, GLenum zfail, GLenum zpass);
		typedef void (*glStencilOpSeparate_handle)(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
		typedef void (*glTexImage2D_handle)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
		typedef void (*glTexParameterf_handle)(GLenum target, GLenum pname, GLfloat param);
		typedef void (*glTexParameterfv_handle)(GLenum target, GLenum pname, const GLfloat* params);
		typedef void (*glTexParameteri_handle)(GLenum target, GLenum pname, GLint param);
		typedef void (*glTexParameteriv_handle)(GLenum target, GLenum pname, const GLint* params);
		typedef void (*glTexSubImage2D_handle)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
		typedef void (*glUniform1f_handle)(GLint location, GLfloat x);
		typedef void (*glUniform1fv_handle)(GLint location, GLsizei count, const GLfloat* v);
		typedef void (*glUniform1i_handle)(GLint location, GLint x);
		typedef void (*glUniform1iv_handle)(GLint location, GLsizei count, const GLint* v);
		typedef void (*glUniform2f_handle)(GLint location, GLfloat x, GLfloat y);
		typedef void (*glUniform2fv_handle)(GLint location, GLsizei count, const GLfloat* v);
		typedef void (*glUniform2i_handle)(GLint location, GLint x, GLint y);
		typedef void (*glUniform2iv_handle)(GLint location, GLsizei count, const GLint* v);
		typedef void (*glUniform3f_handle)(GLint location, GLfloat x, GLfloat y, GLfloat z);
		typedef void (*glUniform3fv_handle)(GLint location, GLsizei count, const GLfloat* v);
		typedef void (*glUniform3i_handle)(GLint location, GLint x, GLint y, GLint z);
		typedef void (*glUniform3iv_handle)(GLint location, GLsizei count, const GLint* v);
		typedef void (*glUniform4f_handle)(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
		typedef void (*glUniform4fv_handle)(GLint location, GLsizei count, const GLfloat* v);
		typedef void (*glUniform4i_handle)(GLint location, GLint x, GLint y, GLint z, GLint w);
		typedef void (*glUniform4iv_handle)(GLint location, GLsizei count, const GLint* v);
		typedef void (*glUniformMatrix2fv_handle)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
		typedef void (*glUniformMatrix3fv_handle)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
		typedef void (*glUniformMatrix4fv_handle)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
		typedef void (*glUseProgram_handle)(GLuint program);
		typedef void (*glValidateProgram_handle)(GLuint program);
		typedef void (*glVertexAttrib1f_handle)(GLuint indx, GLfloat x);
		typedef void (*glVertexAttrib1fv_handle)(GLuint indx, const GLfloat* values);
		typedef void (*glVertexAttrib2f_handle)(GLuint indx, GLfloat x, GLfloat y);
		typedef void (*glVertexAttrib2fv_handle)(GLuint indx, const GLfloat* values);
		typedef void (*glVertexAttrib3f_handle)(GLuint indx, GLfloat x, GLfloat y, GLfloat z);
		typedef void (*glVertexAttrib3fv_handle)(GLuint indx, const GLfloat* values);
		typedef void (*glVertexAttrib4f_handle)(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
		typedef void (*glVertexAttrib4fv_handle)(GLuint indx, const GLfloat* values);
		typedef void (*glVertexAttribPointer_handle)(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr);
		typedef void (*glViewport_handle)(GLint x, GLint y, GLsizei width, GLsizei height);

	protected:
		static LibGl2* _singleton;

		LibGl2();
		~LibGl2();

	public:
		LibGl2(LibGl2 &other) = delete;
		void operator=(const LibGl2 &) = delete;
		static LibGl2 *GetInstance();

		// OpenGL functions pointers
		glActiveTexture_handle glActiveTexture;
		glAttachShader_handle glAttachShader;
		glBindAttribLocation_handle glBindAttribLocation;
		glBindBuffer_handle glBindBuffer;
		glBindFramebuffer_handle glBindFramebuffer;
		glBindRenderbuffer_handle glBindRenderbuffer;
		glBindTexture_handle glBindTexture;
		glBlendColor_handle glBlendColor;
		glBlendEquation_handle glBlendEquation;
		glBlendEquationSeparate_handle glBlendEquationSeparate;
		glBlendFunc_handle glBlendFunc;
		glBlendFuncSeparate_handle glBlendFuncSeparate;
		glBufferData_handle glBufferData;
		glBufferSubData_handle glBufferSubData;
		glCheckFramebufferStatus_handle glCheckFramebufferStatus;
		glClear_handle glClear;
		glClearColor_handle glClearColor;
		glClearDepthf_handle glClearDepthf;
		glClearStencil_handle glClearStencil;
		glColorMask_handle glColorMask;
		glCompileShader_handle glCompileShader;
		glCompressedTexImage2D_handle glCompressedTexImage2D;
		glCompressedTexSubImage2D_handle glCompressedTexSubImage2D;
		glCopyTexImage2D_handle glCopyTexImage2D;
		glCopyTexSubImage2D_handle glCopyTexSubImage2D;
		glCreateProgram_handle glCreateProgram;
		glCreateShader_handle glCreateShader;
		glCullFace_handle glCullFace;
		glDeleteBuffers_handle glDeleteBuffers;
		glDeleteFramebuffers_handle glDeleteFramebuffers;
		glDeleteProgram_handle glDeleteProgram;
		glDeleteRenderbuffers_handle glDeleteRenderbuffers;
		glDeleteShader_handle glDeleteShader;
		glDeleteTextures_handle glDeleteTextures;
		glDepthFunc_handle glDepthFunc;
		glDepthMask_handle glDepthMask;
		glDepthRangef_handle glDepthRangef;
		glDetachShader_handle glDetachShader;
		glDisable_handle glDisable;
		glDisableVertexAttribArray_handle glDisableVertexAttribArray;
		glDrawArrays_handle glDrawArrays;
		glDrawElements_handle glDrawElements;
		glEnable_handle glEnable;
		glEnableVertexAttribArray_handle glEnableVertexAttribArray;
		glFinish_handle glFinish;
		glFlush_handle glFlush;
		glFramebufferRenderbuffer_handle glFramebufferRenderbuffer;
		glFramebufferTexture2D_handle glFramebufferTexture2D;
		glFrontFace_handle glFrontFace;
		glGenBuffers_handle glGenBuffers;
		glGenerateMipmap_handle glGenerateMipmap;
		glGenFramebuffers_handle glGenFramebuffers;
		glGenRenderbuffers_handle glGenRenderbuffers;
		glGenTextures_handle glGenTextures;
		glGetActiveAttrib_handle glGetActiveAttrib;
		glGetActiveUniform_handle glGetActiveUniform;
		glGetAttachedShaders_handle glGetAttachedShaders;
		glGetAttribLocation_handle glGetAttribLocation;
		glGetBooleanv_handle glGetBooleanv;
		glGetBufferParameteriv_handle glGetBufferParameteriv;
		glGetError_handle glGetError;
		glGetFloatv_handle glGetFloatv;
		glGetFramebufferAttachmentParameteriv_handle glGetFramebufferAttachmentParameteriv;
		glGetIntegerv_handle glGetIntegerv;
		glGetProgramiv_handle glGetProgramiv;
		glGetProgramInfoLog_handle glGetProgramInfoLog;
		glGetRenderbufferParameteriv_handle glGetRenderbufferParameteriv;
		glGetShaderiv_handle glGetShaderiv;
		glGetShaderInfoLog_handle glGetShaderInfoLog;
		glGetShaderPrecisionFormat_handle glGetShaderPrecisionFormat;
		glGetShaderSource_handle glGetShaderSource;
		glGetString_handle glGetString;
		glGetTexParameterfv_handle glGetTexParameterfv;
		glGetTexParameteriv_handle glGetTexParameteriv;
		glGetUniformfv_handle glGetUniformfv;
		glGetUniformiv_handle glGetUniformiv;
		glGetUniformLocation_handle glGetUniformLocation;
		glGetVertexAttribfv_handle glGetVertexAttribfv;
		glGetVertexAttribiv_handle glGetVertexAttribiv;
		glGetVertexAttribPointerv_handle glGetVertexAttribPointerv;
		glHint_handle glHint;
		glIsBuffer_handle glIsBuffer;
		glIsEnabled_handle glIsEnabled;
		glIsFramebuffer_handle glIsFramebuffer;
		glIsProgram_handle glIsProgram;
		glIsRenderbuffer_handle glIsRenderbuffer;
		glIsShader_handle glIsShader;
		glIsTexture_handle glIsTexture;
		glLineWidth_handle glLineWidth;
		glLinkProgram_handle glLinkProgram;
		glPixelStorei_handle glPixelStorei;
		glPolygonOffset_handle glPolygonOffset;
		glReadPixels_handle glReadPixels;
		glReleaseShaderCompiler_handle glReleaseShaderCompiler;
		glRenderbufferStorage_handle glRenderbufferStorage;
		glSampleCoverage_handle glSampleCoverage;
		glScissor_handle glScissor;
		glShaderBinary_handle glShaderBinary;
		glShaderSource_handle glShaderSource;
		glStencilFunc_handle glStencilFunc;
		glStencilFuncSeparate_handle glStencilFuncSeparate;
		glStencilMask_handle glStencilMask;
		glStencilMaskSeparate_handle glStencilMaskSeparate;
		glStencilOp_handle glStencilOp;
		glStencilOpSeparate_handle glStencilOpSeparate;
		glTexImage2D_handle glTexImage2D;
		glTexParameterf_handle glTexParameterf;
		glTexParameterfv_handle glTexParameterfv;
		glTexParameteri_handle glTexParameteri;
		glTexParameteriv_handle glTexParameteriv;
		glTexSubImage2D_handle glTexSubImage2D;
		glUniform1f_handle glUniform1f;
		glUniform1fv_handle glUniform1fv;
		glUniform1i_handle glUniform1i;
		glUniform1iv_handle glUniform1iv;
		glUniform2f_handle glUniform2f;
		glUniform2fv_handle glUniform2fv;
		glUniform2i_handle glUniform2i;
		glUniform2iv_handle glUniform2iv;
		glUniform3f_handle glUniform3f;
		glUniform3fv_handle glUniform3fv;
		glUniform3i_handle glUniform3i;
		glUniform3iv_handle glUniform3iv;
		glUniform4f_handle glUniform4f;
		glUniform4fv_handle glUniform4fv;
		glUniform4i_handle glUniform4i;
		glUniform4iv_handle glUniform4iv;
		glUniformMatrix2fv_handle glUniformMatrix2fv;
		glUniformMatrix3fv_handle glUniformMatrix3fv;
		glUniformMatrix4fv_handle glUniformMatrix4fv;
		glUseProgram_handle glUseProgram;
		glValidateProgram_handle glValidateProgram;
		glVertexAttrib1f_handle glVertexAttrib1f;
		glVertexAttrib1fv_handle glVertexAttrib1fv;
		glVertexAttrib2f_handle glVertexAttrib2f;
		glVertexAttrib2fv_handle glVertexAttrib2fv;
		glVertexAttrib3f_handle glVertexAttrib3f;
		glVertexAttrib3fv_handle glVertexAttrib3fv;
		glVertexAttrib4f_handle glVertexAttrib4f;
		glVertexAttrib4fv_handle glVertexAttrib4fv;
		glVertexAttribPointer_handle glVertexAttribPointer;
		glViewport_handle glViewport;

};

#endif
